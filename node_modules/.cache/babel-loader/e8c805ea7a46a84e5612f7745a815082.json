{"ast":null,"code":"var _jsxFileName = \"/home/rodrigobpolim/Documents/www/rocketseat/gostack/level-1/desafios/bootcamp-gostack-02-desafios-conceitos-reactjs/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport api from './services/api';\nimport \"./styles.css\";\n\nfunction App() {\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    api.get('repositories').then(response => {\n      setRepositories(response.data);\n    });\n  }, []);\n\n  async function handleAddRepository() {\n    // TODO\n    const response = await api.post('repositories', {\n      title: `Repositório ${Date.now()}`,\n      url: 'teste',\n      techs: 'teste',\n      likes: 0\n    });\n  }\n\n  async function handleRemoveRepository(id) {// TODO\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-testid\": \"repository-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(\"li\", {\n    key: repository.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, repository.title, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleRemoveRepository(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Remover\")))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Adicionar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/rodrigobpolim/Documents/www/rocketseat/gostack/level-1/desafios/bootcamp-gostack-02-desafios-conceitos-reactjs/src/App.js"],"names":["React","useState","useEffect","api","App","repositories","setRepositories","get","then","response","data","handleAddRepository","post","title","Date","now","url","techs","likes","handleRemoveRepository","id","map","repository"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAO,cAAP;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAiCL,QAAQ,CAAC,EAAD,CAA/C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwBC,IAAxB,CAA6BC,QAAQ,IAAI;AACvCH,MAAAA,eAAe,CAACG,QAAQ,CAACC,IAAV,CAAf;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,iBAAeC,mBAAf,GAAqC;AACnC;AAEA,UAAMF,QAAQ,GAAG,MAAMN,GAAG,CAACS,IAAJ,CAAS,cAAT,EAAyB;AAC9CC,MAAAA,KAAK,EAAG,eAAcC,IAAI,CAACC,GAAL,EAAW,EADa;AAE9CC,MAAAA,GAAG,EAAE,OAFyC;AAG9CC,MAAAA,KAAK,EAAE,OAHuC;AAI9CC,MAAAA,KAAK,EAAE;AAJuC,KAAzB,CAAvB;AAMD;;AAED,iBAAeC,sBAAf,CAAsCC,EAAtC,EAA0C,CACxC;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,YAAY,CAACgB,GAAb,CAAiBC,UAAU,iBAC1B;AAAI,IAAA,GAAG,EAAEA,UAAU,CAACF,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,UAAU,CAACT,KADd,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAMM,sBAAsB,CAAC,CAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADD,CADH,CADF,eAYE;AAAQ,IAAA,OAAO,EAAER,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZF,CADF;AAgBD;;AAED,eAAeP,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport api from './services/api'\nimport \"./styles.css\";\n\nfunction App() {\n\n  const [repositories, setRepositories]= useState([])\n\n  useEffect(() => {\n    api.get('repositories').then(response => {\n      setRepositories(response.data)\n    })\n  }, [])\n\n  async function handleAddRepository() {\n    // TODO\n\n    const response = await api.post('repositories', {\n      title: `Repositório ${Date.now()}`,\n      url: 'teste',\n      techs: 'teste',\n      likes: 0,\n    })\n  }\n\n  async function handleRemoveRepository(id) {\n    // TODO\n  }\n\n  return (\n    <div>\n      <ul data-testid=\"repository-list\">\n        {repositories.map(repository =>\n          <li key={repository.id}>\n            {repository.title}\n            <button onClick={() => handleRemoveRepository(1)}>\n              Remover\n            </button>\n          </li>\n        )}\n      </ul>\n\n      <button onClick={handleAddRepository}>Adicionar</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}